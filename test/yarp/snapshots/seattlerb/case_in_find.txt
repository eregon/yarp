ProgramNode(0...27)(
  locals: [:a, :b],
  statements:
   StatementsNode(0...27)(
     body:
      [CaseNode(0...27)(
         predicate:
          SymbolNode(5...7)(
            opening_loc: (5...6),
            value_loc: (6...7),
            closing_loc: nil,
            unescaped: "a"
          ),
         conditions:
          [InNode(10...23)(
             pattern:
              FindPatternNode(13...23)(
                constant: nil,
                left:
                 SplatNode(13...15)(
                   operator_loc: (13...14),
                   expression:
                    LocalVariableTargetNode(14...15)(name: :a, depth: 0)
                 ),
                requireds:
                 [SymbolNode(17...19)(
                    opening_loc: (17...18),
                    value_loc: (18...19),
                    closing_loc: nil,
                    unescaped: "+"
                  )],
                right:
                 SplatNode(21...23)(
                   operator_loc: (21...22),
                   expression:
                    LocalVariableTargetNode(22...23)(name: :b, depth: 0)
                 ),
                opening_loc: nil,
                closing_loc: nil
              ),
             statements: nil,
             in_loc: (10...12),
             then_loc: nil
           )],
         consequent: nil,
         case_keyword_loc: (0...4),
         end_keyword_loc: (24...27)
       )]
   )
)
