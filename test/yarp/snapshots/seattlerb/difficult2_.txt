ProgramNode(0...20)(
  locals: [],
  statements:
   StatementsNode(0...20)(
     body:
      [IfNode(0...13)(
         if_keyword_loc: nil,
         predicate: IntegerNode(0...1)(),
         statements:
          StatementsNode(4...9)(
            body:
             [CallNode(4...9)(
                receiver: nil,
                operator_loc: nil,
                message_loc: (4...5),
                opening_loc: (5...6),
                arguments:
                 ArgumentsNode(6...8)(
                   arguments:
                    [StringNode(6...8)(
                       opening_loc: (6...7),
                       content_loc: (7...7),
                       closing_loc: (7...8),
                       unescaped: ""
                     )]
                 ),
                closing_loc: (8...9),
                block: nil,
                flags: 0,
                name: "b"
              )]
          ),
         consequent:
          ElseNode(10...13)(
            else_keyword_loc: (10...11),
            statements:
             StatementsNode(12...13)(body: [IntegerNode(12...13)()]),
            end_keyword_loc: nil
          ),
         end_keyword_loc: nil
       ),
       CallNode(14...20)(
         receiver: nil,
         operator_loc: nil,
         message_loc: (14...15),
         opening_loc: nil,
         arguments:
          ArgumentsNode(16...20)(
            arguments:
             [KeywordHashNode(16...20)(
                elements:
                 [AssocNode(16...20)(
                    key:
                     SymbolNode(16...18)(
                       opening_loc: nil,
                       value_loc: (16...17),
                       closing_loc: (17...18),
                       unescaped: "d"
                     ),
                    value: IntegerNode(19...20)(),
                    operator_loc: nil
                  )]
              )]
          ),
         closing_loc: nil,
         block: nil,
         flags: 0,
         name: "a"
       )]
   )
)
